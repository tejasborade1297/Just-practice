{
	"name": "spliting data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "input",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "output",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "output",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "output",
						"type": "DatasetReference"
					},
					"name": "sink3"
				},
				{
					"dataset": {
						"referenceName": "output",
						"type": "DatasetReference"
					},
					"name": "sink4"
				},
				{
					"dataset": {
						"referenceName": "output",
						"type": "DatasetReference"
					},
					"name": "sink5"
				}
			],
			"transformations": [
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EmpID as string,",
				"          EmpName as string,",
				"          DeptID as string,",
				"          Salary as string,",
				"          JoiningDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 split(equals(DeptID, \"10\"),",
				"     equals(DeptID, \"20\"),",
				"     equals(DeptID, \"30\"),",
				"     equals(DeptID, \"40\"),",
				"     disjoint: false) ~> split1@(ItEmployee, HREmployee, FIEmployee, MarketingEmployee, remainig)",
				"split1@ItEmployee sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['ITemp'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1",
				"split1@HREmployee sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['HR'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink2",
				"split1@FIEmployee sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['FI'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink3",
				"split1@MarketingEmployee sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Markin'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink4",
				"split1@remainig sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Reamining'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink5"
			]
		}
	}
}